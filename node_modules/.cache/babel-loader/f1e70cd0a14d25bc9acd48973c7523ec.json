{"remainingRequest":"D:\\wte\\wte-admin-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\wte\\wte-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wte\\wte-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wte\\wte-admin-vue\\src\\views\\order\\order-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wte\\wte-admin-vue\\src\\views\\order\\order-list.vue","mtime":1604286264000},{"path":"D:\\wte\\wte-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\wte\\wte-admin-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\wte\\wte-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\wte\\wte-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovd3RlL3d0ZS1hZG1pbi12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXREYXRlU3RyIH0gZnJvbSAnQC91dGlscy9jb21tb24nOwppbXBvcnQgeyBnZXREYXRhIH0gZnJvbSAnQC9hcGkvb3JkZXInOwppbXBvcnQgd2F2ZXMgZnJvbSAnQC9kaXJlY3RpdmUvd2F2ZXMnOwppbXBvcnQgU2ltcGxlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL1NpbXBsZVRhYmxlJzsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnT3JkZXJMaXN0JywKICBjb21wb25lbnRzOiB7CiAgICBTaW1wbGVUYWJsZTogU2ltcGxlVGFibGUsCiAgICBQYWdpbmF0aW9uOiBQYWdpbmF0aW9uCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICB3YXZlczogd2F2ZXMKICB9LAogIGZpbHRlcnM6IHt9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsndXNlcklkJ10pKSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgdmFsdWUxOiAnJywKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGxpc3RRdWVyeTogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDEwLAogICAgICAgIHN0YXRlOiAnJywKICAgICAgICBvdXRUcmFkZU5vOiAnJywKICAgICAgICBzdGFydERhdGU6IGdldERhdGVTdHIobmV3IERhdGUoKS5nZXRUaW1lKCkgLSA4NjQwMDAwMDApLAogICAgICAgIGVuZERhdGU6IGdldERhdGVTdHIobmV3IERhdGUoKS5nZXRUaW1lKCkpCiAgICAgIH0sCiAgICAgIG9yZGVyU3RhdGVPcHRpb25zOiBbewogICAgICAgIGtleTogMCwKICAgICAgICBkaXNwbGF5X25hbWU6ICflhajpg6gnCiAgICAgIH0sIHsKICAgICAgICBrZXk6IDEsCiAgICAgICAgZGlzcGxheV9uYW1lOiAn5b6F5LuY5qy+JwogICAgICB9LCB7CiAgICAgICAga2V5OiAyLAogICAgICAgIGRpc3BsYXlfbmFtZTogJ+W+heWPkei0pycKICAgICAgfSwgewogICAgICAgIGtleTogMywKICAgICAgICBkaXNwbGF5X25hbWU6ICflvoXmlLbotKcnCiAgICAgIH0sIHsKICAgICAgICBrZXk6IDQsCiAgICAgICAgZGlzcGxheV9uYW1lOiAn5b6F5o+Q6LSnJwogICAgICB9LCB7CiAgICAgICAga2V5OiA1LAogICAgICAgIGRpc3BsYXlfbmFtZTogJ+W+heaIkOWboicKICAgICAgfSwgewogICAgICAgIGtleTogMTAsCiAgICAgICAgZGlzcGxheV9uYW1lOiAn5bey5a6M5oiQJwogICAgICB9LCB7CiAgICAgICAga2V5OiAtMSwKICAgICAgICBkaXNwbGF5X25hbWU6ICflt7Llj5bmtognCiAgICAgIH0sIHsKICAgICAgICBrZXk6IC0yLAogICAgICAgIGRpc3BsYXlfbmFtZTogJ+W3suWFs+mXrScKICAgICAgfV0sCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgaGVhZGVyOiAn5bqP5Y+3JywKICAgICAgICB0eXBlOiAnaW5kZXgnLAogICAgICAgIHdpZHRoOiAnMTAwcHgnLAogICAgICAgIGRhdGFJbmRleDogJycKICAgICAgfSwgewogICAgICAgIGhlYWRlcjogJ+i0reS5sOWVhuWTgScsCiAgICAgICAgdHlwZTogJ29yZGVyR29vZHMnLAogICAgICAgIHdpZHRoOiAnJywKICAgICAgICBkYXRhSW5kZXg6ICdnb29kc0RhdGEnCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICforqLljZXlj7cnLAogICAgICAgIHR5cGU6ICdkYXRhJywKICAgICAgICB3aWR0aDogJycsCiAgICAgICAgZGF0YUluZGV4OiAnb3V0VHJhZGVObycKICAgICAgfSwgewogICAgICAgIGhlYWRlcjogJ+i0reS5sOeUqOaItycsCiAgICAgICAgdHlwZTogJ2RhdGEnLAogICAgICAgIHdpZHRoOiAnJywKICAgICAgICBkYXRhSW5kZXg6ICdzaGlwcGluZ01vZCcKICAgICAgfSwgewogICAgICAgIGhlYWRlcjogJ+aUr+S7mOmHkeminScsCiAgICAgICAgdHlwZTogJ2RhdGEnLAogICAgICAgIHdpZHRoOiAnJywKICAgICAgICBkYXRhSW5kZXg6ICd0b3RhbFByaWNlJwogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAn6K6i5Y2V54q25oCBJywKICAgICAgICB0eXBlOiAnZGF0YScsCiAgICAgICAgd2lkdGg6ICcnLAogICAgICAgIGRhdGFJbmRleDogJ3N0YXRlVGlwJwogICAgICB9XQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgc3RhID0gdGhpcy4kcm91dGUucGFyYW1zLnN0YTsKCiAgICBpZiAoc3RhICE9PSB1bmRlZmluZWQpIHsKICAgICAgdGhpcy5saXN0UXVlcnkuc3RhdGUgPSBzdGE7CiAgICB9CgogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIGdldERhdGEodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIF90aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLnJlY29yZHM7CiAgICAgICAgX3RoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsOwogICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUZpbHRlcjogZnVuY3Rpb24gaGFuZGxlRmlsdGVyKCkgewogICAgICB0aGlzLmxpc3RRdWVyeS5vZmZzZXQgPSAwOwogICAgICB0aGlzLmdldExpc3QoKTsKICAgIH0sCiAgICBoYW5kbGVDcmVhdGU6IGZ1bmN0aW9uIGhhbmRsZUNyZWF0ZSgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdPcmdhZGQnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgb3B0OiAnYWRkJwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["order-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.outTradeNo\" placeholder=\"请输入订单号\" style=\"width: 300px;\" class=\"filter-item\" />\n      <el-select v-model=\"listQuery.state\" placeholder=\"订单状态\" clearable class=\"filter-item\" style=\"width: 130px\">\n        <el-option v-for=\"item in orderStateOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" />\n      </el-select>\n      <div class=\"filter-item\">\n        <el-date-picker\n          v-model=\"listQuery.startDate\"\n          type=\"date\"\n          placeholder=\"开始日期\"\n        />\n      </div>\n      <div class=\"filter-item\">\n        <el-date-picker\n          v-model=\"listQuery.endDate\"\n          type=\"date\"\n          placeholder=\"结束日期\"\n        />\n      </div>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        查询\n      </el-button>\n    </div>\n    <SimpleTable :list-loading=\"listLoading\" :data=\"list\" :columns=\"columns\">\n      <el-table-column label=\"操作\" align=\"center\" width=\"150px\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            详情\n          </el-button>\n        </template>\n      </el-table-column>\n    </SimpleTable>\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n  </div>\n</template>\n\n<script>\nimport { getDateStr } from '@/utils/common'\nimport { getData } from '@/api/order'\nimport waves from '@/directive/waves'\nimport SimpleTable from '@/components/SimpleTable'\nimport Pagination from '@/components/Pagination'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'OrderList',\n  components: { SimpleTable, Pagination },\n  directives: { waves },\n  filters: {\n  },\n  computed: {\n    ...mapGetters([\n      'userId'\n    ])\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: [],\n      total: 0,\n      value1: '',\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        state: '',\n        outTradeNo: '',\n        startDate: getDateStr(new Date().getTime() - 864000000),\n        endDate: getDateStr(new Date().getTime())\n      },\n      orderStateOptions: [\n        { key: 0, display_name: '全部' },\n        { key: 1, display_name: '待付款' },\n        { key: 2, display_name: '待发货' },\n        { key: 3, display_name: '待收货' },\n        { key: 4, display_name: '待提货' },\n        { key: 5, display_name: '待成团' },\n        { key: 10, display_name: '已完成' },\n        { key: -1, display_name: '已取消' },\n        { key: -2, display_name: '已关闭' }\n      ],\n      columns: [\n        { header: '序号', type: 'index', width: '100px', dataIndex: '' },\n        { header: '购买商品', type: 'orderGoods', width: '', dataIndex: 'goodsData' },\n        { header: '订单号', type: 'data', width: '', dataIndex: 'outTradeNo' },\n        { header: '购买用户', type: 'data', width: '', dataIndex: 'shippingMod' },\n        { header: '支付金额', type: 'data', width: '', dataIndex: 'totalPrice' },\n        { header: '订单状态', type: 'data', width: '', dataIndex: 'stateTip' }\n      ]\n    }\n  },\n  created() {\n    const sta = this.$route.params.sta\n    if (sta !== undefined) {\n      this.listQuery.state = sta\n    }\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      getData(this.listQuery).then(response => {\n        console.log(response)\n        this.list = response.data.records\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.offset = 0\n      this.getList()\n    },\n    handleCreate() {\n      this.$router.push({\n        name: 'Orgadd',\n        params: {\n          opt: 'add'\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/order"}]}